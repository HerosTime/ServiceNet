entity FieldsDisplaySettings {
    name String required

    locationFields String,
    organizationFields String,
    physicalAddressFields String,
    postalAddressFields String,
    serviceFields String,
    serviceTaxonomiesDetailsFields String,
    contactDetailsFields String
}

entity LocationFieldsValue {
    locationField LocationFields required
}

enum LocationFields {
      NAME,
      ALTERNATE_NAME,
      DESCRIPTION,
      TRANSPORTATION,
      LATITUDE,
      LONGITUDE,
      REGULAR_SCHEDULE_NOTES,

      PHYSICAL_ADDRESS,
      POSTAL_ADDRESS,
      REGULAR_SCHEDULE_OPENING_HOURS,
      LANGS,
      HOLIDAY_SCHEDULES
}

entity OrganizationFieldsValue {
    organizationField OrganizationFields required
}

enum OrganizationFields {
    NAME,
    ALTERNATE_NAME,
    DESCRIPTION,
    EMAIL,
    URL,
    TAX_STATUS,
    ACTIVE
}

entity PhysicalAddressFieldsValue {
    physicalAddressField PhysicalAddressFields required
}

enum PhysicalAddressFields {
    ATTENTION,
    ADDRESS_1,
    CITY,
    REGION,
    STATE_PROVINCE,
    POSTAL_CODE,
    COUNTRY
}

entity PostalAddressFieldsValue {
    postalAddressField PostalAddressFields required
}

enum PostalAddressFields {
    ATTENTION,
    ADDRESS1,
    CITY,
    REGION,
    STATE_PROVINCE,
    POSTAL_CODE,
    COUNTRY
}

entity ServiceFieldsValue {
    serviceField ServiceFields required
}

enum ServiceFields {
      NAME,
      ALTERNATE_NAME,
      DESCRIPTION,
      URL,
      EMAIL,
      STATUS,
      INTERPRETATION_SERVICES,
      APPLICATION_PROCESS,
      WAIT_TIME,
      FEES,
      ACCREDITATIONS,
      LICENSES,
      TYPE,

      ELIGIBILITY,
      FUNDING,
      DOCS,
      PAYMENTS_ACCEPTEDS,
      TAXONOMIES,
      REGULAR_SCHEDULE_OPENING_HOURS,
      LANGS,
      HOLIDAY_SCHEDULES,
      CONTACTS,
      PHONES
}

entity ServiceTaxonomiesDetailsFieldsValue {
    serviceTaxonomiesDetailsField ServiceTaxonomiesDetailsFields required
}

enum ServiceTaxonomiesDetailsFields {
    TAXONOMY_NAME,
    TAXONOMY_DETAILS
}

entity ContactDetailsFieldsValue {
    contactDetailsField ContactDetailsFields required
}

enum ContactDetailsFields {
    NAME,
    TITLE,
    DEPARTMENT,
    EMAIL
}

relationship ManyToOne {
    FieldsDisplaySettings{user} to User,
}

service FieldsDisplaySettings with serviceImpl
service LocationFieldsValue with serviceImpl
service OrganizationFieldsValue with serviceImpl
service PhysicalAddressFieldsValue with serviceImpl
service PostalAddressFieldsValue with serviceImpl
service ServiceFieldsValue with serviceImpl
service ServiceTaxonomiesDetailsFieldsValue with serviceImpl
service ContactDetailsFieldsValue with serviceImpl

dto FieldsDisplaySettings with mapstruct
dto LocationFieldsValue with mapstruct
dto OrganizationFieldsValue with mapstruct
dto PhysicalAddressFieldsValue with mapstruct
dto PostalAddressFieldsValue with mapstruct
dto ServiceFieldsValue with mapstruct
dto ServiceTaxonomiesDetailsFieldsValue with mapstruct
dto ContactDetailsFieldsValue with mapstruct
