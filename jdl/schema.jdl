entity SystemAccount {
    name String required
}

entity DocumentUpload {
    // uploader user reference
    dateUploaded ZonedDateTime required,
    documentId String unique required
}

entity Organization {
    name String required,
    alternateName String,
    description TextBlob,
    email String maxlength(50),
    url String,
    taxStatus String,
    taxId String,
    yearIncorporated LocalDate,
    legalStatus String,
    active Boolean required,
    updatedAt ZonedDateTime
}

entity Service {
    name String required,
    alternateName String,
    description TextBlob,
    url String,
    email String,
    status String,
    interpretationServices TextBlob,
    applicationProcess TextBlob,
    waitTime TextBlob,
    fees TextBlob,
    accreditations TextBlob,
    licenses TextBlob,
    type String,
    updatedAt ZonedDateTime
}

entity Program {
    name String required,
    alternateName String
}

entity ServiceAtLocation {
    description TextBlob
}

entity Location {
    name String required,
    alternameName String,
    description TextBlob,
    transportation String,
    latitude Double,
    longitude Double
}

entity PhysicalAddress {
    attention String,
    address1 String required,
    city String required,
    region String,
    stateProvince String required,
    postalCode String required,
    country String required
}

entity PostalAddress {
    attention String,
    address1 String required,
    city String required,
    region String,
    stateProvince String required,
    postalCode String required,
    country String required
}

entity Phone {
    number String required,
    extension Integer,
    type String,
    language String,
    description TextBlob
}

entity Contact {
    name String required,
    title String,
    department String,
    email String
}

entity RegularSchedule {
    weekday Integer required,
    opensAt String,
    closesAt String
}

entity HolidaySchedule {
    closed Boolean required,
    opensAt String,
    closesAt String,
    startDate LocalDate required,
    endDate LocalDate required
}

entity Funding {
    source String required
}

entity Eligibility {
    eligibility String required
}

entity ServiceArea {
    description TextBlob required
}

entity RequiredDocument {
    document String required
}

entity PaymentAccepted {
    payment String
}

entity Language {
    language String required
}

entity AccessibilityForDissabilities {
    accessibility String required,
    details String
}

entity ServiceTaxonomy {
    taxonomyDetails TextBlob
}

entity Taxonomy {
    name String,
    vocabulary String
}

entity OrganizationMatch {
    fieldName String,
    timestamp ZonedDateTime,
    deleted Boolean,

    fieldPath String,
    matchedValue TextBlob
}

entity Metadata {
    resourceId String required,
    lastActionDate ZonedDateTime required,
    lastActionType ActionType required,
    fieldName String required,
    previousValue TextBlob,
    replacementValue TextBlob
    // user reference
}

enum ActionType {
    CREATE, UPDATE, DELETE
}

relationship ManyToOne {
    Organization{sourceDocument(dateUploaded)} to DocumentUpload,
    Organization{account(name)} to SystemAccount,

    Program{organization(name)} to Organization{programs(name)},

    Service{organization(name)} to Organization{services(name)},
    Service{program(name)} to Program{services(name)},

    ServiceAtLocation{location(name)} to Location,

    OrganizationMatch{organizationRecord(name)} to Organization,
    OrganizationMatch{partnerVersion(name)} to Organization,

    Phone{location(name)} to Location,
    Phone{srvc(name)} to Service,
    Phone{organization(name)} to Organization,
    Phone{contact(name)} to Contact,
    Phone{serviceAtLocation} to ServiceAtLocation{phones(number)},

    Contact{organization(name)} to Organization,
    Contact{srvc(name)} to Service,
    Contact{serviceAtLocation} to ServiceAtLocation,

    ServiceArea{srvc(name)} to Service{areas},
    
    RequiredDocument{srvc(name)} to Service{docs(document)},
    
    PaymentAccepted{srvc(name)} to Service{paymentsAccepted},

    Language{srvc(name)} to Service{langs(language)},
    Language{location(name)} to Location{langs(language)},

    AccessibilityForDissabilities{location(name)} to Location{langs(accessibility)},

    Taxonomy{parent(name)} to Taxonomy,

    ServiceTaxonomy{srvc(name)} to Service{taxonomies},
    ServiceTaxonomy{taxonomy(name)} to Taxonomy
}

relationship OneToOne {
    Organization{location(address1)} to Location,
    Organization{replacedBy} to Organization,
    
    ServiceAtLocation{srvc(name)} to Service{location(name)},

    PhysicalAddress{location(name)} to Location{physicalAddress(address1)},
    PostalAddress{location(name)} to Location{postalAddress(address1)},

    RegularSchedule{srvc(name)} to Service{regularSchedule},
    RegularSchedule{location(name)} to Location{regularSchedule},
    RegularSchedule{serviceAtlocation} to ServiceAtLocation{regularSchedule},

    HolidaySchedule{srvc(name)} to Service{holidaySchedule},
    HolidaySchedule{location(name)} to Location{holidaySchedule},
    HolidaySchedule{serviceAtlocation} to ServiceAtLocation{holidaySchedule},

    Funding{organization(name)} to Organization{funding},
    Funding{srvc(name)} to Service{funding},

    Eligibility{srvc(name)} to Service{eligibility}
}
